input {
    http { 
        type => "gatling"
        port => 31311
    }
}

filter {
    if [type] == "gatling" {
        if ([message] =~ "\bRUN\b" or [message] =~ "\bSTART\b") {
            drop {}
        }
        if ([message] =~ "\bUSER\b") {
            grok {
                match => {
                    "message" => "%{WORD:metric_type}\s*%{WORD:scenario_name}\s*%{NOTSPACE:user_id}\s*END\s*%{INT:user_start}\s*%{INT:user_end}"
                }
            }
        }
        if ([message] =~ "\REQUEST\b") {
            grok {
                match => {
                    "message" => "%{WORD:metric_type}\s*%{WORD:scenario_name}\s*%{NOTSPACE:user_id}\s*%{DATA:request_name}\s*%{INT:request_start}\s*%{INT:request_end}\s*%{WORD:status}"
                }
            }
        }
        mutate {
            gsub => [
  	        "status", "OK", "true",
  	        "status", "KO", "false"
 	    ]
        }
        mutate {
            convert => {"status" => "boolean"}
            convert => {"request_start" => "integer"}
            convert => {"request_end" => "integer"}
            convert => {"user_start" => "integer"}
            convert => {"user_end" => "integer"}
            convert => {"user_id" => "integer"}
        }
        date {
            match => ["requestStart", "UNIX_MS"]
        }
        if [metric_type] =~ "REQUEST" {
            ruby {
                code => "event['response_duration'] = (event['request_end'] - event['request_start'])"
            }
        }
        if [metric_type] =~ "USER" {
            ruby {
                code => "event['user_duration'] = (event['user_end'] - event['user_start'])"
            }
        }
    }
}

output {
    if [type] == "gatling" {
        stdout { codec => json }
        elasticsearch {
            index => "gatling-%{+YYYY.MM.dd}"
            hosts => "elasticsearch:9200"
        }
    }
}

